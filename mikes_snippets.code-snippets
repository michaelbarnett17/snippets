{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:

	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "cl",
		"body": [
			"console.log();",
		],
		"description": "Log output to console"
	},

	"Regular Function": {
		"scope": "javascript,typescript",
		"prefix": "f",
		"body": [
			"function FUNCTION_NAME() {",
			"",
			"}",
		],
		"description": "create function declaration"
	},	

	"Expression Function": {
		"scope": "javascript,typescript",
		"prefix": "fu",
		"body": [
			"const FUNCTION_NAME = function() {",
			"",
			"}",
		],
		"description": "create function expression"
	},

	"Arrow Function": {
		"scope": "javascript,typescript",
		"prefix": "fun",
		"body": [
			"const FUNCTION_NAME = (PARAM1, PARAM2) => {",
			"",
			"}",
		],
		"description": "create arrow function"
	},

	"For Loop": {
		"scope": "javascript,typescript",
		"prefix": "fo",
		"body": [
			"for (let i = 0; i < ARRAY_HERE.length; i++) {",
			"",
			"}",
		],
		"description": "create for loop"
	},

	"Event Listener": {
		"scope": "javascript,typescript",
		"prefix": "el",
		"body": [
			"document.querySelector(`CSS_SELECTOR`).addEventListener(`EVENT_TYPE`, function () {",
			"",
			"});"
		],
		"description": "create event listener"
	},

	"Event Handler": {
		"scope": "javascript,typescript",
		"prefix": "eh",
		"body": [
			"const VARIALBE_NAME = document.querySelector(`CSS_SELECTOR`);",
			" ",
			"VARIALBE_NAME.EVENT_NAME =  function() {",
			" ",
			"};"
		],
		"description": "create event handler"
	},

	"Query Selector": {
		"scope": "javascript,typescript",
		"prefix": "qs",
		"body": [
			"const VARIALBE_NAME = document.querySelector(`CSS_SELECTOR`);"
		],
		"description": "create event handler"
	},	

	"Object": {
		"scope": "javascript,typescript",
		"prefix": "ob",
		"body": [
			"const OBJECT_NAME = {",
			"    PROPERTY_1: PROPERTY_1_VALUE,",
			"    PROPERTY_2: PROPERTY_2_VALUE,",
			"    METHOD_1: function () {",
			"        //FUNCTION BODY",
			"    },",
			"    METHOD_2: function () {",
			"        //FUNCTION BODY",
			"    },",
			"};"
		],
		"description": "create objects"
	}	
}



	